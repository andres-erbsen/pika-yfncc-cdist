# ## machine
__link /etc/localtime --source /usr/share/zoneinfo/US/Eastern --type symbolic
__line PKG_PATH --file /root/.profile --line 'export PKG_PATH=http://mirrors.mit.edu/pub/OpenBSD/$(uname -r)/packages/$(machine -a)/'
__package_pkg_openbsd vim --state present --flavor no_x11

# ## network
__file /etc/hostname.em0 --source - <<'EOF'
inet 18.102.214.17 255.255.255.0
inet alias 18.102.214.25 255.255.255.255
inet alias 18.102.214.26 255.255.255.255
inet alias 18.102.214.27 255.255.255.255
EOF

echo '18.102.214.1' | __file /etc/mygate --source -
echo -e 'lookup file bind\nnameserver 18.72.0.3\nnameserver 18.70.0.160' | __file /etc/resolv.conf --source -
__hostname

# ## ssh

. "${__manifest}/__ssh"

# extra ssh access as user web (to push to the website repository)
require="__directory/home/web" __directory /home/web/.ssh --owner web --mode 0700
cat "$__manifest/pubkeys/yfnccs" | require="__directory/home/web/.ssh" __file /home/web/.ssh/authorized_keys --owner web --mode 0600 --source -

# ## packet filtering
# route incoming connections to user-mode services

__file /etc/pf.conf --source - <<'EOF'
#	$OpenBSD: pf.conf,v 1.54 2014/08/23 05:49:42 deraadt Exp $
#
# See pf.conf(5) and /etc/examples/pf.conf

set skip on lo

block return	# block stateless traffic
pass		# establish keep-state

# By default, do not permit remote connections to X11
block return in on ! lo0 proto tcp to port 6000:6010

# pika-web.mit.edu is served by user web
match in proto tcp from any to 18.102.214.17 port 80 rdr-to 18.102.214.17 port 8080
match in proto tcp from any to 18.102.214.17 port 443 rdr-to 18.102.214.17 port 8443
# pika-wiki.mit.edu is served by user wiki
match in proto tcp from any to 18.102.214.25 port 80 rdr-to 18.102.214.25 port 9080
match in proto tcp from any to 18.102.214.25 port 443 rdr-to 18.102.214.25 port 9443
# mealplan.mit.edu is served by user mealplan
match in proto tcp from any to 18.102.214.26 port 80 rdr-to 18.102.214.26 port 10080
match in proto tcp from any to 18.102.214.26 port 443 rdr-to 18.102.214.26 port 10443
# public-pika-wiki.mit.edu is served by user wiki
match in proto tcp from any to 18.102.214.27 port 80 rdr-to 18.102.214.27 port 9580
match in proto tcp from any to 18.102.214.27 port 443 rdr-to 18.102.214.27 port 9943
EOF

# ## Website
__user web --home /home/web
require="__user/web" __directory /home/web --owner web

__package_pkg_openbsd git
# SETUP: put website files in /home/web/pika-website

require="__directory/home/web" __file /home/web/simple-https-server --owner web --source "$__manifest/bin/openbsd/simple-https-server" --mode 755
require="__directory/home/web __file/home/web/simple-https-server" \
  __file /home/web/run.sh --owner web --mode 755 --source  - <<'EOF'
#!/bin/sh
~/simple-https-server \
	-register yfncc@mit.edu \
	-listenhttps pika-web.mit.edu:8443 \
	-listenhttp pika-web.mit.edu:8080 \
	-serve ~/pika-website \
	-state ~/letsencrypt.cache \
	2>&1 | logger -t web-simple-https-server
EOF

# # Wiki

__user wiki --home /home/wiki

require="__user/wiki" __directory /home/wiki --owner wiki
require="__directory/home/wiki" __directory /home/wiki/pikawiki --owner wiki

__package_pkg_openbsd ruby --version 2.3.0 --pkg_path http://mirrors.mit.edu/pub/OpenBSD/5.9/packages/amd64

__package_pkg_openbsd icu4c

require="__directory/home/wiki" __file /home/wiki/listproxy --owner wiki --source "$__manifest/bin/openbsd/listproxy" --mode 755
cat "$__manifest/pubkeys/mit-client-ca.pem" "$__manifest/pubkeys/startcom-root.pem" \
  | require="__directory/home/wiki" __file /home/wiki/client-ca.pem --owner wiki --mode 644 --source -

require="__directory/home/wiki" __file /home/wiki/config.rb --owner wiki --mode 644 --source - <<'EOF'
class Precious::App
    before do
        session['gollum.author'] = {
            :name       => request.env['HTTP_PROXY_AUTHENTICATED_FULL_NAME'],
            :email      => request.env['HTTP_PROXY_AUTHENTICATED_EMAIL'],
        }
    end
end
EOF

require="__file/home/wiki/config.rb" __file /home/wiki/gollum.sh --owner wiki --mode 755 --source  - <<'EOF'
#!/bin/sh
cd ~/pikawiki
~/.gem/ruby/2.3/bin/gollum23 --host 127.0.0.1 --port 4567 --config ~/config.rb --allow-uploads page \
	2>&1 | logger -t wiki-gollum
EOF

require="__file/home/wiki/listproxy __file/home/wiki/client-ca.pem" \
  __file /home/wiki/gollum-proxy.sh --owner wiki --mode 755 --source  - <<'EOF'
#!/bin/sh
~/listproxy \
	-register yfncc@mit.edu \
	-listenhttps pika-wiki.mit.edu:9443 \
	-listenhttp pika-wiki.mit.edu:9080 \
	-authenticate ~/client-ca.pem \
	-authorize pika-wiki \
	-proxy http://127.0.0.1:4567/ \
	-state ~/letsencrypt.cache \
	2>&1 | logger -t wiki-listproxy
EOF

# ## Public wiki

require="__directory/home/wiki" __file /home/wiki/public-wiki-server --owner wiki --mode 755 --source "$__manifest/bin/openbsd/public-wiki-server"
require="__directory/home/wiki" __file /home/wiki/public-wiki.html --owner wiki --mode 755 --source "$__manifest/html/public-wiki.html"
require="__file/home/wiki/public-wiki-server __file/home/wiki/public-wiki.html" __file /home/wiki/public-wiki.sh --owner wiki --mode 755 --source - <<'EOF'
#!/bin/sh
cd
~/public-wiki-server \
  -register yfncc@mit.edu \
  -listenhttps public-pika-wiki.mit.edu:9943 \
  -listenhttp public-pika-wiki.mit.edu:9580 \
  -state ~/letsencrypt-public-wiki.cache \
  -serve ~/pikawiki/Public \
  2>&1 | logger -t public-wiki
EOF

# # Mealplan site

__user mealplan --home /home/mealplan
require="__user/mealplan" __directory /home/mealplan --owner mealplan
require="__directory/home/mealplan" __file /home/mealplan/mealplanserver --owner mealplan --source "$__manifest/bin/openbsd/mealplan" --mode 755
require="__directory/home/mealplan" __file /home/mealplan/signup.html --owner mealplan --source "$__manifest/html/signup.html" --mode 644
require="__directory/home/mealplan" __file /home/mealplan/admin.html --owner mealplan --source "$__manifest/html/admin.html" --mode 644
require="__directory/home/mealplan" __file /home/mealplan/inventory.html --owner mealplan --source "$__manifest/html/inventory.html" --mode 644

cat "$__manifest/pubkeys/mit-client-ca.pem" "$__manifest/pubkeys/startcom-root.pem" \
  | require="__directory/home/mealplan" __file /home/mealplan/client-ca.pem --owner mealplan --mode 644 --source -

require="__file/home/mealplan/mealplanserver __file/home/mealplan/signup.html __file/home/mealplan/admin.html __file/home/mealplan/inventory.html" \
  __file /home/mealplan/run.sh --owner mealplan --mode 755 --source  - <<'EOF'
#!/bin/sh
cd
~/mealplanserver \
	-register yfncc@mit.edu \
	-listenhttps mealplan.mit.edu:10443 \
	-listenhttp mealplan.mit.edu:10080 \
	-authenticate ~/client-ca.pem \
	-authorize pika-food \
	-state ~/letsencrypt.cache \
	2>&1 | logger -t mealplanserver
EOF

# # Mealplan reminders
require="__user/mealplan" __file /home/mealplan/remind --source "$__manifest/bin/openbsd/remind" --mode 755
require="__file/home/mealplan/remind" __cron mealplan-remind-clean --user mealplan --hour 11 --minute 0 \
  --command "/home/mealplan/remind /home/mealplan/signups.dat clean 0"
require="__file/home/mealplan/remind" __cron mealplan-remind-cook --user mealplan --hour 21 --minute 0 \
  --command "/home/mealplan/remind /home/mealplan/signups.dat cook 1"

# ## autostart all the things
#
require="__file/home/web/run.sh __file/home/wiki/gollum.sh __file/home/wiki/gollum-proxy.sh __file/home/wiki/public-wiki.sh" \
  __file /etc/rc.local --owner root --mode 644 --source  - <<'EOF'
#!/bin/sh
su web -c /home/web/run.sh &
su wiki -c /home/wiki/gollum.sh &
su wiki -c /home/wiki/gollum-proxy.sh &
su wiki -c /home/wiki/public-wiki.sh &
su mealplan -c /home/mealplan/run.sh &
EOF
# SETUP: su wiki
# SETUP: cd
# SETUP: gem install --user-install --no-document gollum github-markdown
# these steps may need to be repeated after every system upgrade --
# some ruby gems are strongly tied to the versions of system
# libraries that were present at the time they were installed.
